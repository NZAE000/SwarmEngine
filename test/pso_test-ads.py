from pathlib import Path
import sys

sys.path.append(str(Path(__file__).parent.parent))
from problemOptimization.advertisement import Advertisements       # Problem to solve
from algorithmSwarm.pso import PSO                                 # Algorithm to use
from util.fitGBestPlot import gBestGraph                           # Show gbest movement
from util.pareto import paretoGraph                                # Show data results 


'''
Max
[[-7.626150251383023, 43.957456461223174], [-7.164988592758785, 24.584786170003962], [1.7827823875921114, 81.40204222204441], [-4.29197184817861, 10.435998157627788], [-12.70163915519114, 93.34381599466266]]
[[-25.7918033563031, 25.7918033563031], [-15.874887381381374, 15.874887381381374], [-41.59241230481826, 41.59241230481826], [-7.363985002903199, 7.363985002903199], [-53.022727574926904, 53.022727574926904]]
[0.13570202717696578, 0.22047400500648107, 0.08414996404511367, 0.4752861390429434, 0.06600942954234329]

Min
[[-33.918577612566494, 12.706811230261513], [-22.448969929191204, 7.104780514427982], [-51.490857431367786, 38.09731870523359], [-7.569128572508632, 7.534190839879457], [-51.75865440224797, 65.18922818496952]]
[[-23.312694421414005, 23.312694421414005], [-14.776875221809593, 14.776875221809593], [-44.79408806830069, 44.79408806830069], [-7.5516597061940445, 7.5516597061940445], [-58.473941293608746, 58.473941293608746]]
[0.15013279618099637, 0.2368565713293873, 0.07813531095137609, 0.4634742740233938, 0.059855722439262925]

'''

###### MAIN ####################################
try:
  swarm = PSO(Advertisements(), 100, 5)
  swarm.prepare(n_exec=300)
  swarm.solve(n_exec=1)
  swarm.bestToConsole()

  gBestGraph(swarm.path_gbestLog)
  paretoGraph(swarm.path_gbestData)

except Exception as e:
  print(f"{e} \nCaused by {e.__cause__}")